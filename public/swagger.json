{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "User Service API.",
    "version": "1.0.0"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Авторизация пользователя.",
        "operationId": "LoginRequest",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "usersAuth",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserAuth"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/LoginResponse"
          },
          "400": {
            "$ref": "#/responses/StatusBadRequest"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "auth"
        ],
        "summary": "Обновление токена.",
        "operationId": "RefreshRequest",
        "responses": {
          "200": {
            "$ref": "#/responses/RefreshResponse"
          },
          "400": {
            "$ref": "#/responses/StatusBadRequest"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Регистрация пользователя.",
        "operationId": "RegisterRequest",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "users",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserWithoutBalance"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/RegisterResponse"
          },
          "400": {
            "$ref": "#/responses/StatusBadRequest"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Получение ников всех пользователей.",
        "operationId": "EmptyRequest",
        "responses": {
          "200": {
            "$ref": "#/responses/UsersGetAllResponse"
          },
          "400": {
            "$ref": "#/responses/StatusBadRequest"
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Получение информации о пользователе.",
        "operationId": "GetUserInfoRequest",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Username",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UserInfoResponse"
          },
          "400": {
            "$ref": "#/responses/StatusBadRequest"
          }
        }
      },
      "put": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Обновление информации о пользователе.",
        "operationId": "UpdateuserRequest",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Username",
            "name": "username",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Body",
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserForUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/updateuserResponse"
          },
          "400": {
            "$ref": "#/responses/StatusBadRequest"
          }
        }
      }
    },
    "/users/{username}/orders": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "auth"
        ],
        "summary": "Получение заказов пользователя.",
        "operationId": "GetUsersOrdersRequest",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Username",
            "name": "username",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Page",
            "description": "страница, которую нужно получить, при пустом значении возвращает первую страницу.",
            "name": "page",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetUsersOrdersResponse"
          },
          "400": {
            "$ref": "#/responses/StatusBadRequest"
          }
        }
      }
    }
  },
  "definitions": {
    "AuthInfo": {
      "type": "object",
      "properties": {
        "Access": {
          "type": "string",
          "x-go-name": "Refresh"
        },
        "Refresh": {
          "type": "string",
          "x-go-name": "Access"
        }
      },
      "x-go-package": "userService/internal/model"
    },
    "Task": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Count"
        },
        "heights": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-go-name": "Heights"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "price": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Price"
        }
      },
      "x-go-package": "userService/internal/model"
    },
    "UserAuth": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "userService/internal/model"
    },
    "UserForUpdate": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/UserInfoForUpdate"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "userService/internal/model"
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Balance"
        },
        "firstname": {
          "type": "string",
          "x-go-name": "Firstname"
        },
        "group": {
          "type": "string",
          "x-go-name": "Group"
        },
        "lastname": {
          "type": "string",
          "x-go-name": "Lastname"
        },
        "surname": {
          "type": "string",
          "x-go-name": "Surname"
        }
      },
      "x-go-package": "userService/internal/model"
    },
    "UserInfoForUpdate": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "x-go-name": "Firstname"
        },
        "group": {
          "type": "string",
          "x-go-name": "Group"
        },
        "lastname": {
          "type": "string",
          "x-go-name": "Lastname"
        },
        "surname": {
          "type": "string",
          "x-go-name": "Surname"
        }
      },
      "x-go-package": "userService/internal/model"
    },
    "UserInfoWithoutBalance": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "x-go-name": "Firstname"
        },
        "group": {
          "type": "string",
          "x-go-name": "Group"
        },
        "lastname": {
          "type": "string",
          "x-go-name": "Lastname"
        },
        "surname": {
          "type": "string",
          "x-go-name": "Surname"
        }
      },
      "x-go-package": "userService/internal/model"
    },
    "UserWithoutBalance": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/UserInfoWithoutBalance"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "userService/internal/model"
    }
  },
  "responses": {
    "GetUsersOrdersResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Task"
        }
      }
    },
    "LoginResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/AuthInfo"
      }
    },
    "RefreshResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/AuthInfo"
      }
    },
    "RegisterResponse": {
      "description": ""
    },
    "StatusBadRequest": {
      "description": "Bad Request replys an error of API calling."
    },
    "UserInfoResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/UserInfo"
      }
    },
    "UsersGetAllResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "updateuserResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/UserInfo"
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}