version: "3.9"

services:
  task_app:
    build: ./TaskService/
    container_name: task_app
    ports:
      - 127.0.0.1:8081:8081
      - 127.0.0.1:8082:8080
    depends_on:
      - migrate
      - user_app
    networks:
      - mynetwork
  user_app:
    build: ./UserService/
    container_name: user_app
    ports:
      - 127.0.0.1:8080:8080
    depends_on:
      - migrate
    networks:
      - mynetwork
  db:
    image: postgres
    container_name: postgres_app
    ports:
      - 127.0.0.1:5432:5432
    environment:
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
  migrate:
    image: migrate/migrate
    volumes:
      - ./database/migrate:/migration
    networks:
      - mynetwork
    entrypoint:
      [
        "migrate",
        "-path",
        "/migration",
        "-database",
        "postgres://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=${DB_SSLMODE}",
      ]
    command: ["up"]
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
  testuserapp:
    build:
      context: ./UserService/
      dockerfile: Dockerfile_test
  testtaskapp:
    build:
      context: ./TaskService/
      dockerfile: Dockerfile_test

networks:
  mynetwork:
    driver: bridge